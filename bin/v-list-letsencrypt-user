#!/bin/bash
# info: list letsencrypt key
# options: USER [FORMAT]
#
# The function for obtaining the letsencrypt key thumbprint


#----------------------------------------------------------#
#                    Variable&Function                     #
#----------------------------------------------------------#

# Argument definition
user=$1
format=${2-shell}

# Includes
source $VESTA/func/main.sh

# Json function
json_list_conf() {
    lines=$(wc -l $USER_DATA/ssl/le.conf | cut -f 1 -d ' ')
    i='0'
    IFS=$'\n'
    echo -e "{\n\t\"LETSENCRYPT\": {"
    for str in $(cat $USER_DATA/ssl/le.conf); do
        (( ++i))
        key=${str%%=*}
        value=${str#*=}
        if [ "$i" -lt "$lines" ]; then
            echo -e "\t\t\"$key\": \"${value//\'/}\","
        else
            echo -e "\t\t\"$key\": \"${value//\'/}\""
        fi
    done
    echo -e "\t}\n}"
}

# Shell function
shell_list_conf() {
    IFS=$'\n'
    for str in $(cat $USER_DATA/ssl/le.conf); do
        key=${str%%=*}
        value=${str#*=}
        echo "$key: ${value//\'/}"
    done
}


#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '1' "$#" 'USER [FORMAT]'
is_object_valid 'user' 'USER' "$user"
if [ ! -e "$USER_DATA/ssl/le.conf" ]; then
        check_result $E_NOTEXIST "LetsEncrypt user account doesn't exist"
fi


#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

# Listing system config
case $format in 
    json)   json_list_conf ;;
    plain)  shell_list_conf ;;
    shell)  shell_list_conf | column -t ;;
esac


#----------------------------------------------------------#
#                       Vesta                              #
#----------------------------------------------------------#

exit
