#!/bin/bash
# info: rebuild dns domains
# options: USER [RESTART]
#
# The function rebuilds BIND configuration files for all dns domains.


#----------------------------------------------------------#
#                    Variable&Function                     #
#----------------------------------------------------------#

# Argument defenition
user=$1
restart=$2

# Includes
source $VESTA/conf/vesta.conf
source $VESTA/func/main.sh
source $VESTA/func/domain.sh
source $VESTA/func/ip.sh
source $VESTA/func/rebuild.sh


#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '1' "$#" 'USER [RESTART]'
validate_format 'user'
is_system_enabled "$WEB_SYSTEM"
is_object_valid 'user' 'USER' "$user"
is_object_unsuspended 'user' 'USER' "$user"


#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

user_domains=0
user_ssl=0
user_aliases=0
suspended_web=0
conf=$USER_DATA/web.conf
fields='$DOMAIN'
nohead=1
domain_counter=0

# Clean up old config
rm -f $HOMEDIR/$user/conf/tmp_*.conf

# Starting loop
for domain in $(shell_list); do
    ((++ domain_counter))
    rebuild_web_domain_conf
done

# Config path
httpd_conf='/etc/httpd/conf.d/vesta.conf'
nginx_conf='/etc/nginx/conf.d/vesta_users.conf'

# Checking if there is at least 1 domain
if [ "$domain_counter" -lt 1 ]; then

    # Deleting web configs
    rm -f $HOMEDIR/$user/conf/web/*
    sed -i "/.*\/$user\/.*httpd.conf/d" $httpd_conf
    if [ -e "$nginx_conf" ]; then
        sed -i "/.*\/$user\/.*nginx.conf/d" $nginx_conf
    fi

else

    # Renaming tmp config
    tmp_conf="$HOMEDIR/$user/conf/web/tmp_httpd.conf"
    conf="$HOMEDIR/$user/conf/web/httpd.conf"
    mv $tmp_conf $conf

    # Checking httpd.conf include
    httpd_include=$(grep "$conf" $httpd_conf )
    if [ -z "$httpd_include" ]; then
        echo "Include $conf" >> $httpd_conf
    fi

    # Checking ssl
    if [ "$ssl_change" = 'yes' ]; then
        tmp_conf="$HOMEDIR/$user/conf/web/tmp_shttpd.conf"
        conf="$HOMEDIR/$user/conf/web/shttpd.conf"
        mv $tmp_conf $conf
    fi

    # Checking ssl include
    httpd_include=$(grep "$conf" $httpd_conf )
    if [ -z "$httpd_include" ]; then
        echo "Include $conf" >> $httpd_conf
    fi

    # Checking nginx
    if [ "$ngix_change" = 'yes' ]; then
        tmp_conf="$HOMEDIR/$user/conf/web/tmp_nginx.conf"
        conf="$HOMEDIR/$user/conf/web/nginx.conf"
        mv $tmp_conf $conf
    fi
    nginx_include=$(grep "$conf" $nginx_conf )
    if [ -z "$nginx_include" ]; then
        echo "include $conf;" >> $nginx_conf
    fi

    # Checking ssl for nginx
    if [ "$ngix_change" = 'yes' ] && [ "$ssl_change" = 'yes' ]; then
        tmp_conf="$HOMEDIR/$user/conf/web/tmp_snginx.conf"
        conf="$HOMEDIR/$user/conf/web/snginx.conf"
        mv $tmp_conf $conf
        nginx_include=$(grep "$conf" $nginx_conf )
        if [ -z "$nginx_include" ]; then
            echo "include $conf;" >> $nginx_conf
        fi
    fi
fi


#----------------------------------------------------------#
#                       Vesta                              #
#----------------------------------------------------------#

# Updating counters
update_user_value "$user" '$SUSPENDED_WEB' "$suspended_web"
update_user_value "$user" '$U_WEB_DOMAINS' "$user_domains"
update_user_value "$user" '$U_WEB_SSL' "$user_ssl"
update_user_value "$user" '$U_WEB_ALIASES' "$user_aliases"

# Restart web server
if [ "$restart" != 'no' ]; then
    $BIN/v-restart-web "$EVENT"
fi

# Logging
log_event "$OK" "$EVENT"

exit
