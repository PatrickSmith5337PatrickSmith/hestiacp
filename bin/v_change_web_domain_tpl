#!/bin/bash
# info: change web domain template
# options: user domain template
#
# The function changes template of httpd.conf configuration file. The content
# of webdomain directories remains untouched.


#----------------------------------------------------------#
#                    Variable&Function                     #
#----------------------------------------------------------#

# Argument defenition
user=$1
domain=$(idn -t --quiet -u "$2" )
domain_idn=$(idn -t --quiet -a "$domain")
template=$3

# Importing variables
source $VESTA/conf/vesta.conf
source $VESTA/func/shared.sh
source $VESTA/func/domain.sh


#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

# Checking arg number
check_args '3' "$#" 'user domain template'

# Checking argument format
validate_format 'user' 'domain' 'template'

# Checking web system is enabled
is_system_enabled 'WEB_SYSTEM'

# Checking user
is_object_valid 'user' 'USER' "$user"

# Checking user is active
is_object_unsuspended 'user' 'USER' "$user"

# Checking domain exist
is_domain_valid 'web'

# Checking domain is not suspened
is_domain_suspended 'web'

# Checking template
templates=$(get_user_value '$WEB_TPL')
is_apache_template_valid


#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

# Parsing domain values
get_domain_values 'web'

# Deleting domain
tpl_file="$WEBTPL/apache_$TPL.tpl"
old_tpl=$TPL
conf="$HOMEDIR/$user/conf/web/httpd.conf"
del_web_config

# Deleting ssl vhost
if [ "$SSL" = 'yes' ]; then
    tpl_file="$WEBTPL/apache_$TPL.stpl"
    conf="$HOMEDIR/$user/conf/web/shttpd.conf"
    del_web_config
fi

# Defining variables for new vhost config
ip=$IP
email="$user@$domain"
group="$user"
docroot="$HOMEDIR/$user/web/$domain/public_html"
docroot_string="DocumentRoot $docroot"
conf="$HOMEDIR/$user/conf/web/httpd.conf"
tpl_file="$WEBTPL/apache_$template.tpl"


# Parsing domain aliases
i=1
j=1
OLD_IFS="$IFS"
IFS=','
for dom_alias in $ALIAS; do
    dom_alias=$(idn -t --quiet -a $dom_alias)

    # Spliting ServerAlias lines
    check_8k="$server_alias $dom_alias"
    if [ "${#check_8k}" -ge '8100' ]; then
        if [ "$j" -eq 1 ]; then
            alias_string="ServerAlias $server_alias"
        else
            alias_string="$alias_string\n    ServerAlias $server_alias"
        fi
        (( ++j))
        server_alias=''
    fi

    if [ "$i" -eq 1 ]; then
        aliases_idn="$dom_alias"
        server_alias="$dom_alias"
        alias_string="ServerAlias $server_alias"
    else
        aliases_idn="$aliases_idn,$dom_alias"
        server_alias="$server_alias $dom_alias"
    fi
    (( ++i))
done
if [ -z "$alias_string" ]; then
    alias_string="ServerAlias $server_alias"
else
     if [ ! -z "$server_alias" ]; then
        alias_string="$alias_string\n    ServerAlias $server_alias"
    fi
fi
IFS=$OLD_IFS


# Parsing new template
template_data=$(cat $WEBTPL/apache_$template.descr | grep -v '#')
for keys in $template_data; do
    eval ${keys%%=*}=${keys#*=}
done

# Checking error log
if [ "$ELOG" = 'no' ]; then
    elog='#'
else
    elog=''
fi

# Adding domain to the httpd.conf
add_web_config

# Running template trigger
if [ -x $WEBTPL/apache_$template.sh ]; then
    $WEBTPL/apache_$template.sh $user $domain $ip $HOMEDIR $docroot
fi

# Checking ssl
if [ "$SSL" = 'yes' ]; then
    # Defining SSL vars
    ssl_crt="$HOMEDIR/$user/conf/web/ssl.$domain.crt"
    ssl_key="$HOMEDIR/$user/conf/web/ssl.$domain.key"
    ssl_pem="$HOMEDIR/$user/conf/web/ssl.$domain.pem"
    ssl_ca="$HOMEDIR/$user/conf/web/ssl.$domain.ca"
    if [ ! -e "$USER_DATA/web/ssl/$domain.ca" ]; then
        ssl_ca_str='#'
    fi
    case $SSL_HOME in
        single) docroot="$HOMEDIR/$user/web/$domain/public_shtml" ;;
        same)   docroot="$HOMEDIR/$user/web/$domain/public_html" ;;
    esac
    conf="$HOMEDIR/$user/conf/web/shttpd.conf"
    tpl_file="$WEBTPL/apache_$template.stpl"

    # Adding domain to the httpd.conf
    add_web_config

    # Running template trigger
    if [ -x $WEBTPL/apache_$template.sh ]; then
        $WEBTPL/apache_$template.sh \
            "$user" "$domain" "$ip" "$HOMEDIR" "$docroot"
    fi
fi


#----------------------------------------------------------#
#                       Vesta                              #
#----------------------------------------------------------#

# Changing tpl in config
update_domain_value 'web' '$TPL' "$template"

# Updating db keys
for keys in $(cat $WEBTPL/apache_$template.descr|grep -v '#'); do
    key=$(echo "$keys"| cut -f 1 -d '=' |sed -e "s/^/\$/g")
    value=$(echo "$keys" |cut -f 2 -d \')
    update_domain_value 'web' "$key" "$value"
done

# Adding task to the vesta pipe
$BIN/v_restart_web

# Logging
log_history "$EVENT" "v_change_web_domain_tpl $user $domain $old_tpl"
log_event "$OK" "$EVENT"

exit
