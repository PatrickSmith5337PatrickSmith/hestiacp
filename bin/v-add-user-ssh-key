#!/bin/bash
# info: add ssh key
# options: USER key
#
# Function check if $user/.ssh/authorized_keys exists and create it
# After that it append the new key(s)

#----------------------------------------------------------#
#                    Variable&Function                     #
#----------------------------------------------------------#


# Argument definition
user=$1
key=$2

# Includes
source $HESTIA/func/main.sh
source $HESTIA/conf/hestia.conf

# Additional argument formatting

#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

is_format_valid 'user'
is_object_valid 'user' 'USER' "$user"
is_object_unsuspended 'user' 'USER' "$user"

# Perform verification if read-only mode is enabled
check_hestia_demo_mode

#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

# Reading user values
source $USER_DATA/user.conf
#check if file exits
AUTHKEY_FILE=$HOMEDIR/$user/.ssh/authorized_keys
if [ ! -f "$AUTHKEY_FILE" ]; then
    touch "$AUTHKEY_FILE"
    chown ${user}: "${AUTHKEY_FILE}"
fi
TEMP=$(mktemp)
echo "$key" >> "$TEMP"
ssh-keygen -l -f "$TEMP"
if [ ! $? -eq 0 ]; then
    rm "$TEMP"
    exit
fi
rm "$TEMP"
# make sure authorized_keys is ending with EOL
sed -i '$a\' "${AUTHKEY_FILE}"

#append key to file
echo "$key" >> "$AUTHKEY_FILE"

#----------------------------------------------------------#
#                       Hestia                             #
#----------------------------------------------------------#

# Logging
log_history "added ssh-key $user"
log_event "$OK" "$ARGUMENTS"

exit
